name: Deploy Next.js site to VPS Hostinger

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ['master']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build Next.js application
        run: npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # - name: Deploy to server via SSH
      #   env:
      #     SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      #     SERVER_USER: ${{ secrets.SERVER_USER }}
      #     SERVER_HOST: ${{ secrets.SERVER_HOST }}
      #     DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
      #   run: |
      #     echo "$SSH_PRIVATE_KEY" > private_key.pem
      #     chmod 600 private_key.pem
      #     mkdir -p ~/.ssh
      #     ssh-keyscan -H $SERVER_HOST >> ~/.ssh/known_hosts
      #     scp -i private_key.pem nextjs-build.tar.gz $SERVER_USER@$SERVER_HOST:$DEPLOY_PATH
      #     ssh -i private_key.pem $SERVER_USER@$SERVER_HOST << 'EOF'
      #       cd $DEPLOY_PATH
      #       tar -xzf nextjs-build.tar.gz
      #       rm -f nextjs-build.tar.gz
      #       # Comandos para iniciar/reiniciar a aplicação, por exemplo:
      #       pm2 restart nextjs-app
      #     EOF
      #     rm -f private_key.pem

      - name: Deploy to server
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: '-rlgoDzvc --delete'
          # SOURCE: 'dist/'
          REMOTE_HOST: ${{ vars.REMOTE_HOST }}
          REMOTE_USER: ${{ vars.REMOTE_USER }}
          REMOTE_PORT: ${{ vars.REMOTE_PORT }}
          TARGET: ${{ vars.TARGET }}
          SCRIPT_BEFORE: |
            whoami
            ls -al
          SCRIPT_AFTER: |
            whoami
            ls -al
            echo $RSYNC_STDOUT
